-- Made with 'mini.colors' module of https://github.com/echasnovski/mini.nvim

if vim.g.colors_name ~= nil then
  vim.cmd 'highlight clear'
end
vim.g.colors_name = 'rose-pine'

-- Highlight groups
local hi = vim.api.nvim_set_hl

hi(0, '@character.special', { link = '@character' })
hi(0, '@class', { fg = '#accfb3' })
hi(0, '@constant.builtin', { fg = '#e770a1' })
hi(0, '@constant.macro', { link = '@constant' })
hi(0, '@constructor', { fg = '#accfb3' })
hi(0, '@field', { fg = '#accfb3' })
hi(0, '@function.builtin', { fg = '#e770a1' })
hi(0, '@function.macro', { link = '@function' })
hi(0, '@interface', { fg = '#accfb3' })
hi(0, '@keyword.operator', { fg = '#a38c73' })
hi(0, '@lsp.type.comment', {})
hi(0, '@lsp.type.enum', { link = '@type' })
hi(0, '@lsp.type.interface', { link = '@interface' })
hi(0, '@lsp.type.keyword', { link = '@keyword' })
hi(0, '@lsp.type.namespace', { link = '@namespace' })
hi(0, '@lsp.type.parameter', { link = '@parameter' })
hi(0, '@lsp.type.property', { link = '@property' })
hi(0, '@lsp.type.variable', {})
hi(0, '@lsp.typemod.function.defaultLibrary', { link = 'Special' })
hi(0, '@lsp.typemod.operator.injected', { link = '@operator' })
hi(0, '@lsp.typemod.string.injected', { link = '@string' })
hi(0, '@lsp.typemod.variable.defaultLibrary', { link = '@variable.builtin' })
hi(0, '@lsp.typemod.variable.injected', { link = '@variable' })
hi(0, '@method', { fg = '#e2bcd5' })
hi(0, '@namespace', { link = '@include' })
hi(0, '@parameter', { fg = '#e5a67b', italic = true })
hi(0, '@property', { fg = '#accfb3', italic = true })
hi(0, '@punctuation', { fg = '#7f6a53' })
hi(0, '@punctuation.bracket', { link = '@punctuation' })
hi(0, '@punctuation.delimiter', { link = '@punctuation' })
hi(0, '@punctuation.special', { link = '@punctuation' })
hi(0, '@regexp', { link = 'String' })
hi(0, '@string.escape', { fg = '#5a7544' })
hi(0, '@string.special', { link = '@string' })
hi(0, '@symbol', { link = 'Identifier' })
hi(0, '@tag.attribute', { fg = '#e5a67b' })
hi(0, '@tag.delimiter', { fg = '#a38c73' })
hi(0, '@text', { fg = '#eedecc' })
hi(0, '@text.danger', { fg = '#e770a1' })
hi(0, '@text.emphasis', { italic = true })
hi(0, '@text.environment', { link = 'Macro' })
hi(0, '@text.environment.name', { link = 'Type' })
hi(0, '@text.math', { link = 'Special' })
hi(0, '@text.note', { link = 'SpecialComment' })
hi(0, '@text.strike', { strikethrough = true })
hi(0, '@text.strong', { bold = true })
hi(0, '@text.title', { link = 'Title' })
hi(0, '@text.title.1.markdown', { link = 'markdownH1' })
hi(0, '@text.title.1.marker.markdown', { link = 'markdownH1Delimiter' })
hi(0, '@text.title.2.markdown', { link = 'markdownH2' })
hi(0, '@text.title.2.marker.markdown', { link = 'markdownH2Delimiter' })
hi(0, '@text.title.3.markdown', { link = 'markdownH3' })
hi(0, '@text.title.3.marker.markdown', { link = 'markdownH3Delimiter' })
hi(0, '@text.title.4.markdown', { link = 'markdownH4' })
hi(0, '@text.title.4.marker.markdown', { link = 'markdownH4Delimiter' })
hi(0, '@text.title.5.markdown', { link = 'markdownH5' })
hi(0, '@text.title.5.marker.markdown', { link = 'markdownH5Delimiter' })
hi(0, '@text.title.6.markdown', { link = 'markdownH6' })
hi(0, '@text.title.6.marker.markdown', { link = 'markdownH6Delimiter' })
hi(0, '@text.underline', { underline = true })
hi(0, '@text.uri', { fg = '#e5a67b' })
hi(0, '@text.warning', { fg = '#c5c3ff' })
hi(0, '@todo', { link = 'Todo' })
hi(0, '@variable', { fg = '#eedecc', italic = true })
hi(0, '@variable.builtin', { fg = '#e770a1' })
hi(0, 'AlphaButtons', { fg = '#accfb3' })
hi(0, 'AlphaFooter', { fg = '#c5c3ff' })
hi(0, 'AlphaHeader', { fg = '#5a7544' })
hi(0, 'AlphaShortcut', { fg = '#e2bcd5' })
hi(0, 'Boolean', { fg = '#e2bcd5' })
hi(0, 'BufferCurrent', { bg = '#34230e', fg = '#eedecc' })
hi(0, 'BufferCurrentIndex', { bg = '#34230e', fg = '#eedecc' })
hi(0, 'BufferCurrentMod', { bg = '#34230e', fg = '#accfb3' })
hi(0, 'BufferCurrentSign', { bg = '#34230e', fg = '#a38c73' })
hi(0, 'BufferCurrentTarget', { bg = '#34230e', fg = '#c5c3ff' })
hi(0, 'BufferInactive', { fg = '#a38c73' })
hi(0, 'BufferInactiveIndex', { fg = '#a38c73' })
hi(0, 'BufferInactiveMod', { fg = '#accfb3' })
hi(0, 'BufferInactiveSign', { fg = '#7f6a53' })
hi(0, 'BufferInactiveTarget', { fg = '#c5c3ff' })
hi(0, 'BufferTabpageFill', { bg = '#21170c', fg = '#21170c' })
hi(0, 'BufferVisible', { fg = '#a38c73' })
hi(0, 'BufferVisibleIndex', { fg = '#a38c73' })
hi(0, 'BufferVisibleMod', { fg = '#accfb3' })
hi(0, 'BufferVisibleSign', { fg = '#7f6a53' })
hi(0, 'BufferVisibleTarget', { fg = '#c5c3ff' })
hi(0, 'Character', { fg = '#c5c3ff' })
hi(0, 'CmpItemAbbr', { fg = '#a38c73' })
hi(0, 'CmpItemAbbrDefault', { fg = '#a38c73' })
hi(0, 'CmpItemAbbrDeprecated', { fg = '#a38c73', strikethrough = true })
hi(0, 'CmpItemAbbrDeprecatedDefault', { fg = '#7f6a53' })
hi(0, 'CmpItemAbbrMatch', { bold = true, fg = '#eedecc' })
hi(0, 'CmpItemAbbrMatchDefault', { fg = '#a38c73' })
hi(0, 'CmpItemAbbrMatchFuzzy', { bold = true, fg = '#eedecc' })
hi(0, 'CmpItemAbbrMatchFuzzyDefault', { fg = '#a38c73' })
hi(0, 'CmpItemKind', { fg = '#a38c73' })
hi(0, 'CmpItemKindClass', { fg = '#5a7544' })
hi(0, 'CmpItemKindClassDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindColorDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindConstantDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindConstructorDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindDefault', { fg = '#e2bcd5' })
hi(0, 'CmpItemKindEnumDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindEnumMemberDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindEventDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindFieldDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindFileDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindFolderDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindFunction', { fg = '#e2bcd5' })
hi(0, 'CmpItemKindFunctionDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindInterface', { fg = '#accfb3' })
hi(0, 'CmpItemKindInterfaceDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindKeywordDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindMethod', { fg = '#e5a67b' })
hi(0, 'CmpItemKindMethodDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindModuleDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindOperatorDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindPropertyDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindReferenceDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindSnippet', { fg = '#c5c3ff' })
hi(0, 'CmpItemKindSnippetDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindStructDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindTextDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindTypeParameterDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindUnitDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindValueDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemKindVariable', { fg = '#eedecc' })
hi(0, 'CmpItemKindVariableDefault', { link = 'CmpItemKind' })
hi(0, 'CmpItemMenuDefault', { fg = '#a38c73' })
hi(0, 'ColorColumn', { bg = '#34230e' })
hi(0, 'Comment', { fg = '#7f6a53', italic = true })
hi(0, 'Conceal', {})
hi(0, 'Conditional', { fg = '#5a7544' })
hi(0, 'Constant', { fg = '#c5c3ff' })
hi(0, 'CurSearch', { link = 'IncSearch' })
hi(0, 'Cursor', { bg = '#614f3b', fg = '#eedecc' })
hi(0, 'CursorColumn', { bg = '#2a2014' })
hi(0, 'CursorLine', { bg = '#2a2014' })
hi(0, 'CursorLineNr', { fg = '#eedecc' })
hi(0, 'DapUIBreakpointsCurrentLine', { bold = true, fg = '#c5c3ff' })
hi(0, 'DapUIBreakpointsDisabledLine', { fg = '#7f6a53' })
hi(0, 'DapUIBreakpointsInfo', { link = 'DapUIThread' })
hi(0, 'DapUIBreakpointsLine', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUIBreakpointsPath', { fg = '#accfb3' })
hi(0, 'DapUIDecoration', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUIFloatBorder', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUIFrameName', { link = 'Normal' })
hi(0, 'DapUILineNumber', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUIModifiedValue', { bold = true, fg = '#accfb3' })
hi(0, 'DapUIScope', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUISource', { fg = '#e5a67b' })
hi(0, 'DapUIStoppedThread', { link = 'DapUIBreakpointsPath' })
hi(0, 'DapUIThread', { fg = '#c5c3ff' })
hi(0, 'DapUIValue', { link = 'Normal' })
hi(0, 'DapUIVariable', { link = 'Normal' })
hi(0, 'DapUIWatchesEmpty', { fg = '#e770a1' })
hi(0, 'DapUIWatchesError', { link = 'DapUIWatchesEmpty' })
hi(0, 'DapUIWatchesValue', { link = 'DapUIThread' })
hi(0, 'DarkenedPanel', { bg = '#291d0e' })
hi(0, 'DarkenedStatusline', { bg = '#291d0e' })
hi(0, 'DashboardCenter', { fg = '#c5c3ff' })
hi(0, 'DashboardFooter', { fg = '#e5a67b' })
hi(0, 'DashboardHeader', { fg = '#5a7544' })
hi(0, 'DashboardShortcut', { fg = '#e770a1' })
hi(0, 'Debug', { fg = '#e2bcd5' })
hi(0, 'Define', { fg = '#e5a67b' })
hi(0, 'DefinitionCount', { fg = '#e2bcd5' })
hi(0, 'DefinitionIcon', { fg = '#e2bcd5' })
hi(0, 'DefintionPreviewTitle', { bold = true, fg = '#e2bcd5' })
hi(0, 'Delimiter', { fg = '#a38c73' })
hi(0, 'DiagnosticDefaultError', { fg = '#e770a1' })
hi(0, 'DiagnosticDefaultHint', { fg = '#e5a67b' })
hi(0, 'DiagnosticDefaultInfo', { fg = '#accfb3' })
hi(0, 'DiagnosticDefaultWarn', { fg = '#c5c3ff' })
hi(0, 'DiagnosticDeprecated', { sp = '#d82dce', strikethrough = true })
hi(0, 'DiagnosticError', { fg = '#e770a1' })
hi(0, 'DiagnosticFloatingError', { fg = '#e770a1' })
hi(0, 'DiagnosticFloatingHint', { fg = '#e5a67b' })
hi(0, 'DiagnosticFloatingInfo', { fg = '#accfb3' })
hi(0, 'DiagnosticFloatingWarn', { fg = '#c5c3ff' })
hi(0, 'DiagnosticHint', { fg = '#e5a67b' })
hi(0, 'DiagnosticInfo', { fg = '#accfb3' })
hi(0, 'DiagnosticOk', { ctermfg = 10, fg = '#7ae5ff' })
hi(0, 'DiagnosticSignError', { fg = '#e770a1' })
hi(0, 'DiagnosticSignHint', { fg = '#e5a67b' })
hi(0, 'DiagnosticSignInfo', { fg = '#accfb3' })
hi(0, 'DiagnosticSignWarn', { fg = '#c5c3ff' })
hi(0, 'DiagnosticStatusLineError', { bg = '#291d0e', fg = '#e770a1' })
hi(0, 'DiagnosticStatusLineHint', { bg = '#291d0e', fg = '#e5a67b' })
hi(0, 'DiagnosticStatusLineInfo', { bg = '#291d0e', fg = '#accfb3' })
hi(0, 'DiagnosticStatusLineWarn', { bg = '#291d0e', fg = '#c5c3ff' })
hi(0, 'DiagnosticUnderlineError', { sp = '#e770a1', undercurl = true })
hi(0, 'DiagnosticUnderlineHint', { sp = '#e5a67b', undercurl = true })
hi(0, 'DiagnosticUnderlineInfo', { sp = '#accfb3', undercurl = true })
hi(0, 'DiagnosticUnderlineOk', { sp = '#7ae5ff', underline = true })
hi(0, 'DiagnosticUnderlineWarn', { sp = '#c5c3ff', undercurl = true })
hi(0, 'DiagnosticVirtualTextError', { fg = '#e770a1' })
hi(0, 'DiagnosticVirtualTextHint', { fg = '#e5a67b' })
hi(0, 'DiagnosticVirtualTextInfo', { fg = '#accfb3' })
hi(0, 'DiagnosticVirtualTextWarn', { fg = '#c5c3ff' })
hi(0, 'DiagnosticWarn', { fg = '#c5c3ff' })
hi(0, 'DiffAdd', { bg = '#3d3c2d', blend = 20 })
hi(0, 'DiffChange', { bg = '#34230e' })
hi(0, 'DiffDelete', { bg = '#482929', blend = 20 })
hi(0, 'DiffText', { bg = '#473835', blend = 20 })
hi(0, 'Directory', { fg = '#accfb3' })
hi(0, 'Error', { fg = '#e770a1' })
hi(0, 'ErrorMsg', { bold = true, fg = '#e770a1' })
hi(0, 'Exception', { fg = '#5a7544' })
hi(0, 'Float', { fg = '#c5c3ff' })
hi(0, 'FloatBorder', { bg = '#291d0e', fg = '#4d3d2b' })
hi(0, 'FloatTitle', { bg = '#291d0e', fg = '#eedecc' })
hi(0, 'FoldColumn', { fg = '#7f6a53' })
hi(0, 'Folded', { bg = '#291d0e', fg = '#eedecc' })
hi(0, 'Function', { fg = '#e2bcd5' })
hi(0, 'GitSignsAdd', { bg = '#21170c', fg = '#accfb3' })
hi(0, 'GitSignsChange', { bg = '#21170c', fg = '#e2bcd5' })
hi(0, 'GitSignsDelete', { bg = '#21170c', fg = '#e770a1' })
hi(0, 'HopNextKey', { fg = '#e770a1' })
hi(0, 'HopNextKey1', { fg = '#accfb3' })
hi(0, 'HopNextKey2', { fg = '#5a7544' })
hi(0, 'HopUnmatched', { fg = '#614f3b' })
hi(0, 'Identifier', { fg = '#e2bcd5' })
hi(0, 'IncSearch', { bg = '#e2bcd5', fg = '#21170c' })
hi(0, 'Include', { fg = '#5a7544' })
hi(0, 'IndentBlanklineChar', { fg = '#7f6a53', nocombine = true })
hi(0, 'IndentBlanklineSpaceChar', { fg = '#7f6a53', nocombine = true })
hi(0, 'IndentBlanklineSpaceCharBlankline', { fg = '#7f6a53', nocombine = true })
hi(0, 'Keyword', { fg = '#5a7544' })
hi(0, 'Label', { fg = '#accfb3' })
hi(0, 'LeapLabelPrimary', { link = 'IncSearch' })
hi(0, 'LeapLabelSecondary', { bg = '#5a7544', fg = '#21170c' })
hi(0, 'LeapMatch', { link = 'MatchParen' })
hi(0, 'LineNr', { fg = '#7f6a53' })
hi(0, 'LspCodeLens', { fg = '#a38c73' })
hi(0, 'LspCodeLensSeparator', { fg = '#614f3b' })
hi(0, 'LspFloatWinBorder', { fg = '#4d3d2b' })
hi(0, 'LspFloatWinNormal', { bg = '#291d0e' })
hi(0, 'LspReferenceRead', { bg = '#4d3d2b' })
hi(0, 'LspReferenceText', { bg = '#4d3d2b' })
hi(0, 'LspReferenceWrite', { bg = '#4d3d2b' })
hi(0, 'LspSagaAutoPreview', { fg = '#a38c73' })
hi(0, 'LspSagaCodeActionBorder', { fg = '#4d3d2b' })
hi(0, 'LspSagaCodeActionContent', { fg = '#accfb3' })
hi(0, 'LspSagaCodeActionTitle', { bold = true, fg = '#c5c3ff' })
hi(0, 'LspSagaCodeActionTruncateLine', { link = 'LspSagaCodeActionBorder' })
hi(0, 'LspSagaDefPreviewBorder', { fg = '#4d3d2b' })
hi(0, 'LspSagaDiagnosticBorder', { fg = '#4d3d2b' })
hi(0, 'LspSagaDiagnosticHeader', { bold = true, fg = '#c5c3ff' })
hi(0, 'LspSagaDiagnosticTruncateLine', { link = 'LspSagaDiagnosticBorder' })
hi(0, 'LspSagaDocTruncateLine', { link = 'LspSagaHoverBorder' })
hi(0, 'LspSagaFinderSelection', { fg = '#c5c3ff' })
hi(0, 'LspSagaHoverBorder', { fg = '#4d3d2b' })
hi(0, 'LspSagaLspFinderBorder', { fg = '#4d3d2b' })
hi(0, 'LspSagaRenameBorder', { fg = '#5a7544' })
hi(0, 'LspSagaRenamePromptPrefix', { fg = '#e770a1' })
hi(0, 'LspSagaShTruncateLine', { link = 'LspSagaSignatureHelpBorder' })
hi(0, 'LspSagaSignatureHelpBorder', { fg = '#5a7544' })
hi(0, 'LspSignatureActiveParameter', { bg = '#34230e' })
hi(0, 'Macro', { fg = '#e5a67b' })
hi(0, 'MatchParen', { bg = '#4d3d2b', fg = '#eedecc' })
hi(0, 'MiniCursorword', { underline = true })
hi(0, 'MiniCursorwordCurrent', { underline = true })
hi(0, 'MiniIndentscopeSymbol', { fg = '#4d3d2b' })
hi(0, 'MiniIndentscopeSymbolOff', { fg = '#4d3d2b' })
hi(0, 'ModeMsg', { fg = '#a38c73' })
hi(0, 'ModesCopy', { bg = '#c5c3ff' })
hi(0, 'ModesDelete', { bg = '#e770a1' })
hi(0, 'ModesInsert', { bg = '#accfb3' })
hi(0, 'ModesVisual', { bg = '#e5a67b' })
hi(0, 'MoreMsg', { fg = '#e5a67b' })
hi(0, 'NavicIconsArray', { fg = '#c5c3ff' })
hi(0, 'NavicIconsBoolean', { fg = '#e2bcd5' })
hi(0, 'NavicIconsClass', { fg = '#accfb3' })
hi(0, 'NavicIconsConstant', { fg = '#c5c3ff' })
hi(0, 'NavicIconsConstructor', { fg = '#c5c3ff' })
hi(0, 'NavicIconsEnum', { fg = '#c5c3ff' })
hi(0, 'NavicIconsEnumMember', { fg = '#accfb3' })
hi(0, 'NavicIconsEvent', { fg = '#c5c3ff' })
hi(0, 'NavicIconsField', { fg = '#accfb3' })
hi(0, 'NavicIconsFile', { fg = '#21170c' })
hi(0, 'NavicIconsFunction', { fg = '#5a7544' })
hi(0, 'NavicIconsInterface', { fg = '#accfb3' })
hi(0, 'NavicIconsKey', { fg = '#e5a67b' })
hi(0, 'NavicIconsKeyword', { fg = '#5a7544' })
hi(0, 'NavicIconsMethod', { fg = '#e5a67b' })
hi(0, 'NavicIconsModule', { fg = '#e2bcd5' })
hi(0, 'NavicIconsNamespace', { fg = '#21170c' })
hi(0, 'NavicIconsNull', { fg = '#e770a1' })
hi(0, 'NavicIconsNumber', { fg = '#c5c3ff' })
hi(0, 'NavicIconsObject', { fg = '#c5c3ff' })
hi(0, 'NavicIconsOperator', { fg = '#a38c73' })
hi(0, 'NavicIconsPackage', { fg = '#21170c' })
hi(0, 'NavicIconsProperty', { fg = '#accfb3' })
hi(0, 'NavicIconsString', { fg = '#c5c3ff' })
hi(0, 'NavicIconsStruct', { fg = '#accfb3' })
hi(0, 'NavicIconsTypeParameter', { fg = '#accfb3' })
hi(0, 'NavicIconsVariable', { fg = '#eedecc' })
hi(0, 'NavicSeparator', { fg = '#a38c73' })
hi(0, 'NavicText', { fg = '#a38c73' })
hi(0, 'NeoTreeGitAdded', { fg = '#accfb3' })
hi(0, 'NeoTreeGitConflict', { fg = '#e5a67b' })
hi(0, 'NeoTreeGitDeleted', { fg = '#e770a1' })
hi(0, 'NeoTreeGitIgnored', { fg = '#7f6a53' })
hi(0, 'NeoTreeGitModified', { fg = '#e2bcd5' })
hi(0, 'NeoTreeGitRenamed', { fg = '#5a7544' })
hi(0, 'NeoTreeGitUntracked', { fg = '#c5c3ff' })
hi(0, 'NeoTreeTitleBar', { bg = '#5a7544', fg = '#291d0e' })
hi(0, 'NeogitDiffAddHighlight', { bg = '#4d3d2b', fg = '#accfb3' })
hi(0, 'NeogitDiffContextHighlight', { bg = '#2a2014' })
hi(0, 'NeogitDiffDeleteHighlight', { bg = '#4d3d2b', fg = '#e770a1' })
hi(0, 'NeogitHunkHeader', { bg = '#2a2014' })
hi(0, 'NeogitHunkHeaderHighlight', { bg = '#2a2014' })
hi(0, 'NeorgHeading1Prefix', { bold = true, fg = '#e5a67b' })
hi(0, 'NeorgHeading1Title', { link = 'NeorgHeading1Prefix' })
hi(0, 'NeorgHeading2Prefix', { bold = true, fg = '#accfb3' })
hi(0, 'NeorgHeading2Title', { link = 'NeorgHeading2Prefix' })
hi(0, 'NeorgHeading3Prefix', { bold = true, fg = '#e2bcd5' })
hi(0, 'NeorgHeading3Title', { link = 'NeorgHeading3Prefix' })
hi(0, 'NeorgHeading4Prefix', { bold = true, fg = '#c5c3ff' })
hi(0, 'NeorgHeading4Title', { link = 'NeorgHeading4Prefix' })
hi(0, 'NeorgHeading5Prefix', { bold = true, fg = '#5a7544' })
hi(0, 'NeorgHeading5Title', { link = 'NeorgHeading5Prefix' })
hi(0, 'NeorgHeading6Prefix', { bold = true, fg = '#accfb3' })
hi(0, 'NeorgHeading6Title', { link = 'NeorgHeading6Prefix' })
hi(0, 'NeorgMarkerTitle', { bold = true, fg = '#eedecc' })
hi(0, 'NoiceCursor', { bg = '#eedecc', fg = '#614f3b' })
hi(0, 'NonText', { fg = '#7f6a53' })
hi(0, 'Normal', { fg = '#eedecc' })
hi(0, 'NormalFloat', { bg = '#291d0e', fg = '#eedecc' })
hi(0, 'NormalNC', { fg = '#eedecc' })
hi(0, 'NotifyDEBUGBorder', { fg = '#7f6a53' })
hi(0, 'NotifyDEBUGIcon', { link = 'NotifyDEBUGBorder' })
hi(0, 'NotifyDEBUGTitle', { link = 'NotifyDEBUGBorder' })
hi(0, 'NotifyERRORBorder', { fg = '#e770a1' })
hi(0, 'NotifyERRORIcon', { link = 'NotifyERRORBorder' })
hi(0, 'NotifyERRORTitle', { link = 'NotifyERRORBorder' })
hi(0, 'NotifyINFOBorder', { fg = '#accfb3' })
hi(0, 'NotifyINFOIcon', { link = 'NotifyINFOBorder' })
hi(0, 'NotifyINFOTitle', { link = 'NotifyINFOBorder' })
hi(0, 'NotifyTRACEBorder', { fg = '#e5a67b' })
hi(0, 'NotifyTRACEIcon', { link = 'NotifyTRACEBorder' })
hi(0, 'NotifyTRACETitle', { link = 'NotifyTRACEBorder' })
hi(0, 'NotifyWARNBorder', { fg = '#c5c3ff' })
hi(0, 'NotifyWARNIcon', { link = 'NotifyWARNBorder' })
hi(0, 'NotifyWARNTitle', { link = 'NotifyWARNBorder' })
hi(0, 'Number', { fg = '#c5c3ff' })
hi(0, 'NvimInternalError', { bg = '#e770a1', fg = '#ffffff' })
hi(0, 'NvimTreeEmptyFolderName', { fg = '#7f6a53' })
hi(0, 'NvimTreeFileDeleted', { fg = '#e770a1' })
hi(0, 'NvimTreeFileDirty', { fg = '#e2bcd5' })
hi(0, 'NvimTreeFileMerge', { fg = '#e5a67b' })
hi(0, 'NvimTreeFileNew', { fg = '#accfb3' })
hi(0, 'NvimTreeFileRenamed', { fg = '#5a7544' })
hi(0, 'NvimTreeFileStaged', { fg = '#e5a67b' })
hi(0, 'NvimTreeFolderIcon', { fg = '#a38c73' })
hi(0, 'NvimTreeFolderName', { fg = '#accfb3' })
hi(0, 'NvimTreeGitDeleted', { fg = '#e770a1' })
hi(0, 'NvimTreeGitDirty', { fg = '#e2bcd5' })
hi(0, 'NvimTreeGitIgnored', { fg = '#7f6a53' })
hi(0, 'NvimTreeGitMerge', { fg = '#e5a67b' })
hi(0, 'NvimTreeGitNew', { fg = '#accfb3' })
hi(0, 'NvimTreeGitRenamed', { fg = '#5a7544' })
hi(0, 'NvimTreeGitStaged', { fg = '#e5a67b' })
hi(0, 'NvimTreeImageFile', { fg = '#eedecc' })
hi(0, 'NvimTreeNormal', { fg = '#eedecc' })
hi(0, 'NvimTreeOpenedFile', { bg = '#4d3d2b', fg = '#eedecc' })
hi(0, 'NvimTreeOpenedFolderName', { link = 'NvimTreeFolderName' })
hi(0, 'NvimTreeRootFolder', { fg = '#e5a67b' })
hi(0, 'NvimTreeSpecialFile', { link = 'NvimTreeNormal' })
hi(0, 'NvimTreeWindowPicker', { bg = '#34201a', blend = 10, fg = '#e770a1' })
hi(0, 'OilChange', { fg = '#e2bcd5' })
hi(0, 'OilCopy', { fg = '#e5a67b' })
hi(0, 'OilCreate', { fg = '#accfb3' })
hi(0, 'OilDelete', { fg = '#e770a1' })
hi(0, 'OilDir', { fg = '#e2bcd5' })
hi(0, 'OilMove', { fg = '#c5c3ff' })
hi(0, 'OilSocket', { fg = '#5a7544' })
hi(0, 'Operator', { fg = '#a38c73' })
hi(0, 'Pmenu', { bg = '#291d0e', fg = '#a38c73' })
hi(0, 'PmenuSbar', { bg = '#2a2014' })
hi(0, 'PmenuSel', { bg = '#34230e', fg = '#eedecc' })
hi(0, 'PmenuThumb', { bg = '#4d3d2b' })
hi(0, 'PounceAccept', { bg = '#614f3b', fg = '#e770a1' })
hi(0, 'PounceAcceptBest', { bg = '#c5c3ff', fg = '#21170c' })
hi(0, 'PounceGap', { link = 'Search' })
hi(0, 'PounceMatch', { link = 'Search' })
hi(0, 'PreCondit', { fg = '#e5a67b' })
hi(0, 'PreProc', { fg = '#e5a67b' })
hi(0, 'Question', { fg = '#c5c3ff' })
hi(0, 'RedrawDebugClear', { bg = '#c5c3ff', fg = '#ffffff' })
hi(0, 'RedrawDebugComposed', { bg = '#5a7544', fg = '#ffffff' })
hi(0, 'RedrawDebugRecompose', { bg = '#e770a1', fg = '#ffffff' })
hi(0, 'ReferencesCount', { fg = '#e2bcd5' })
hi(0, 'ReferencesIcon', { fg = '#e2bcd5' })
hi(0, 'Repeat', { fg = '#5a7544' })
hi(0, 'SagaShadow', { bg = '#34230e' })
hi(0, 'Search', { bg = '#4d3d2b' })
hi(0, 'SignAdd', { link = 'GitSignsAdd' })
hi(0, 'SignChange', { link = 'GitSignsChange' })
hi(0, 'SignColumn', { fg = '#eedecc' })
hi(0, 'SignDelete', { link = 'GitSignsDelete' })
hi(0, 'Special', { fg = '#e2bcd5' })
hi(0, 'SpecialChar', { fg = '#e2bcd5' })
hi(0, 'SpecialComment', { fg = '#e5a67b' })
hi(0, 'SpecialKey', { fg = '#accfb3' })
hi(0, 'SpellBad', { sp = '#a38c73', undercurl = true })
hi(0, 'SpellCap', { sp = '#a38c73', undercurl = true })
hi(0, 'SpellLocal', { sp = '#a38c73', undercurl = true })
hi(0, 'SpellRare', { sp = '#a38c73', undercurl = true })
hi(0, 'Statement', { fg = '#5a7544' })
hi(0, 'StatusLine', { bg = '#291d0e', fg = '#a38c73' })
hi(0, 'StatusLineNC', { bg = '#21170c', fg = '#7f6a53' })
hi(0, 'StatusLineTerm', { link = 'StatusLine' })
hi(0, 'StatusLineTermNC', { link = 'StatusLineNC' })
hi(0, 'StorageClass', { fg = '#accfb3' })
hi(0, 'String', { fg = '#c5c3ff' })
hi(0, 'Structure', { fg = '#accfb3' })
hi(0, 'TabLine', { bg = '#291d0e', fg = '#a38c73' })
hi(0, 'TabLineFill', { bg = '#291d0e' })
hi(0, 'TabLineSel', { bg = '#34230e', fg = '#eedecc' })
hi(0, 'Tag', { fg = '#accfb3' })
hi(0, 'TargetWord', { fg = '#e5a67b' })
hi(0, 'TelescopeBorder', { bg = '#291d0e', fg = '#4d3d2b' })
hi(0, 'TelescopeMatching', { fg = '#e2bcd5' })
hi(0, 'TelescopeNormal', { bg = '#291d0e', fg = '#a38c73' })
hi(0, 'TelescopePromptNormal', { bg = '#291d0e', fg = '#eedecc' })
hi(0, 'TelescopePromptPrefix', { fg = '#a38c73' })
hi(0, 'TelescopeSelection', { bg = '#34230e', fg = '#eedecc' })
hi(0, 'TelescopeSelectionCaret', { bg = '#34230e', fg = '#e2bcd5' })
hi(0, 'TelescopeTitle', { fg = '#a38c73' })
hi(0, 'Title', { fg = '#eedecc' })
hi(0, 'Todo', { fg = '#e5a67b' })
hi(0, 'Type', { fg = '#accfb3' })
hi(0, 'Underlined', { underline = true })
hi(0, 'VertSplit', { fg = '#4d3d2b' })
hi(0, 'VimwikiHR', { fg = '#a38c73' })
hi(0, 'VimwikiHeader1', { bold = true, fg = '#e5a67b' })
hi(0, 'VimwikiHeader2', { bold = true, fg = '#accfb3' })
hi(0, 'VimwikiHeader3', { bold = true, fg = '#e2bcd5' })
hi(0, 'VimwikiHeader4', { bold = true, fg = '#c5c3ff' })
hi(0, 'VimwikiHeader5', { bold = true, fg = '#5a7544' })
hi(0, 'VimwikiHeader6', { bold = true, fg = '#accfb3' })
hi(0, 'VimwikiHeaderChar', { fg = '#5a7544' })
hi(0, 'VimwikiLink', { fg = '#e5a67b', underline = true })
hi(0, 'VimwikiList', { fg = '#e5a67b' })
hi(0, 'VimwikiNoExistsLink', { fg = '#e770a1' })
hi(0, 'Visual', { bg = '#4d3d2b' })
hi(0, 'WarningMsg', { fg = '#c5c3ff' })
hi(0, 'WhichKey', { fg = '#e5a67b' })
hi(0, 'WhichKeyDesc', { fg = '#c5c3ff' })
hi(0, 'WhichKeyFloat', { bg = '#291d0e' })
hi(0, 'WhichKeyGroup', { fg = '#accfb3' })
hi(0, 'WhichKeySeparator', { fg = '#a38c73' })
hi(0, 'WhichKeyValue', { fg = '#e2bcd5' })
hi(0, 'WildMenu', { link = 'IncSearch' })
hi(0, 'diffAdded', { link = 'DiffAdd' })
hi(0, 'diffChanged', { link = 'DiffChange' })
hi(0, 'diffRemoved', { link = 'DiffDelete' })
hi(0, 'healthError', { fg = '#e770a1' })
hi(0, 'healthSuccess', { fg = '#accfb3' })
hi(0, 'healthWarning', { fg = '#c5c3ff' })
hi(0, 'htmlArg', { fg = '#e5a67b' })
hi(0, 'htmlBold', { bold = true })
hi(0, 'htmlEndTag', { fg = '#a38c73' })
hi(0, 'htmlH1', { bold = true, fg = '#e5a67b' })
hi(0, 'htmlH2', { bold = true, fg = '#accfb3' })
hi(0, 'htmlH3', { bold = true, fg = '#e2bcd5' })
hi(0, 'htmlH4', { bold = true, fg = '#c5c3ff' })
hi(0, 'htmlH5', { bold = true, fg = '#5a7544' })
hi(0, 'htmlItalic', { italic = true })
hi(0, 'htmlLink', { fg = '#e5a67b' })
hi(0, 'htmlTag', { fg = '#a38c73' })
hi(0, 'htmlTagN', { fg = '#eedecc' })
hi(0, 'htmlTagName', { fg = '#accfb3' })
hi(0, 'markdownDelimiter', { fg = '#a38c73' })
hi(0, 'markdownH1', { bold = true, fg = '#e5a67b' })
hi(0, 'markdownH1Delimiter', { link = 'markdownH1' })
hi(0, 'markdownH2', { bold = true, fg = '#accfb3' })
hi(0, 'markdownH2Delimiter', { link = 'markdownH2' })
hi(0, 'markdownH3', { bold = true, fg = '#e2bcd5' })
hi(0, 'markdownH3Delimiter', { link = 'markdownH3' })
hi(0, 'markdownH4', { bold = true, fg = '#c5c3ff' })
hi(0, 'markdownH4Delimiter', { link = 'markdownH4' })
hi(0, 'markdownH5', { bold = true, fg = '#5a7544' })
hi(0, 'markdownH5Delimiter', { link = 'markdownH5' })
hi(0, 'markdownH6', { bold = true, fg = '#accfb3' })
hi(0, 'markdownH6Delimiter', { link = 'markdownH6' })
hi(0, 'markdownLinkText', { fg = '#e5a67b', sp = '#e5a67b', underline = true })
hi(0, 'markdownUrl', { link = 'markdownLinkText' })
hi(0, 'mkdCode', { fg = '#accfb3', italic = true })
hi(0, 'mkdCodeDelimiter', { fg = '#e2bcd5' })
hi(0, 'mkdCodeEnd', { fg = '#accfb3' })
hi(0, 'mkdCodeStart', { fg = '#accfb3' })
hi(0, 'mkdFootnotes', { fg = '#accfb3' })
hi(0, 'mkdID', { fg = '#accfb3', underline = true })
hi(0, 'mkdInlineURL', { fg = '#e5a67b', underline = true })
hi(0, 'mkdLink', { link = 'mkdInlineURL' })
hi(0, 'mkdLinkDef', { link = 'mkdInlineURL' })
hi(0, 'mkdListItemLine', { fg = '#eedecc' })
hi(0, 'mkdRule', { fg = '#a38c73' })
hi(0, 'mkdURL', { link = 'mkdInlineURL' })

-- Terminal colors
local g = vim.g

g.terminal_color_0 = '#34230e'
g.terminal_color_1 = '#e770a1'
g.terminal_color_2 = '#5a7544'
g.terminal_color_3 = '#c5c3ff'
g.terminal_color_4 = '#accfb3'
g.terminal_color_5 = '#e5a67b'
g.terminal_color_6 = '#e2bcd5'
g.terminal_color_7 = '#eedecc'
g.terminal_color_8 = '#a38c73'
g.terminal_color_9 = '#e770a1'
g.terminal_color_10 = '#5a7544'
g.terminal_color_11 = '#c5c3ff'
g.terminal_color_12 = '#accfb3'
g.terminal_color_13 = '#e5a67b'
g.terminal_color_14 = '#e2bcd5'
g.terminal_color_15 = '#eedecc'
